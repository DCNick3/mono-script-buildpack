#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>


# fail fast
set -e


function conditional_download() {
  DOWNLOAD_URL="$1"
  DESTINATION="$2"

  if [ ! -d ${DESTINATION} ]; then
    rm -rf ${DESTINATION}
    mkdir -p ${DESTINATION}
    echo "-----> Downloading ${DOWNLOAD_URL}"
    curl ${DOWNLOAD_URL} -s | tar xj -C ${DESTINATION}
  fi
}

MONO3_VM_BINARY="http://s3.amazonaws.com/mono3-buildpack/mono-fsharp-nuget3.0.tar.bz2"
NUGET_BINARY="http://s3.amazonaws.com/mono3-buildpack/nuget.tar.bz2"
PAKET_BINARY="https://github.com/fsprojects/Paket/releases/download/0.27.2/paket.exe"
MONO3_VM_VENDOR="vendor"

NUGET="$1/$MONO3_VM_VENDOR/mono3/bin/NuGet.exe"
MOZROOT="$1/$MONO3_VM_VENDOR/mono3/lib/mono/4.5/mozroots.exe"
XBUILD="$1/$MONO3_VM_VENDOR/mono3/lib/mono/4.5/xbuild.exe"

rm -fr $2/$MONO3_VM_VENDOR

echo "-----> Downloading mono to $2/$MONO3_VM_VENDOR"
conditional_download $MONO3_VM_BINARY $2/$MONO3_VM_VENDOR

echo "-----> Copying mono to $1/$MONO3_VM_VENDOR"
cp -pr "$2/$MONO3_VM_VENDOR" "$1"

echo "-----> Downloading nuget to $1/$MONO3_VM_VENDOR/mono3/bin/"
curl $NUGET_BINARY -o - | tar xj -C "$1/$MONO3_VM_VENDOR/mono3/bin/" -f -

echo "-----> Downloading paket to $1/$MONO3_VM_VENDOR/mono3/bin/"
wget -O "$1/$MONO3_VM_VENDOR/mono3/bin/paket.exe" $PAKET_BINARY

mkdir -p "/app"

echo "-----> Linking $1 --> /app"
ln -s "$1" /app

echo "---- /app"
ls /app
echo "---- /app/vendor"
ls /app/vendor
echo "---- /app/vendor/mono3"
ls /app/vendor/mono3
echo "---- /app/vendor/mono3/lib"
ls /app/vendor/mono3/lib
echo "---- /app/vendor/mono3/lib/mono"
ls /app/vendor/mono3/lib/mono
echo "---- /app/vendor/mono3/lib/mono/4.0"
ls /app/vendor/mono3/lib/mono/4.0

#echo "#!/bin/sh\n$1/$MONO3_VM_VENDOR/mono3/bin/mono $1/$MONO3_VM_VENDOR/mono3/lib/mono/4.5/fsc.exe \"\$@\"" > $1/$MONO3_VM_VENDOR/mono3/bin/fsharpc
#echo "#!/bin/sh\n/app/vendor/mono3/bin/mono /app/vendor/mono3/lib/mono/4.5/fsi.exe \"\$@\"" > $1/$MONO3_VM_VENDOR/mono3/bin/fsharpi
#chmod +x $1/$MONO3_VM_VENDOR/mono3/bin/fsharpc
#chmod +x $1/$MONO3_VM_VENDOR/mono3/bin/fsharpi

echo "-----> Setting envvars"
export PATH="$1/$MONO3_VM_VENDOR/mono3/bin:$PATH"
export LD_LIBRARY_PATH="$1/$MONO3_VM_VENDOR/mono3/lib"
echo "-----> Importing trusted root certificates"
mono $MOZROOT --sync --import
cd $1

if [ -f paket.dependencies ]; then
  echo "-----> paket.dependencies found, installing packages with paket"
  mono $MONO3_VM_VENDOR/mono3/bin/paket.exe install
fi

if [ -f packages.config -o -f */packages.config ]; then 
   echo "-----> packages.config found, installing dependencies with nuget" 
   find  -name packages.config | xargs mono $NUGET install -o packages 
fi 

if [ -f app.fsx ]; then
  echo "-----> Compiling app.fsx"
  fsharpc app.fsx
fi

if [ -f *.sln -a ! -f dummy.sln]; then
   echo "-----> Compiling application" 
   mono $XBUILD 
fi



