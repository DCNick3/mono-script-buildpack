#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

#DEPENDENCY_S3_BUCKET_PATH="http://s3.amazonaws.com/mono-dependencies"
MONO_VERSION="3.10.0"
#MONO_DOWNLOAD="${DEPENDENCY_S3_BUCKET_PATH}/${STACK}/mono-${MONO_VERSION}.tar.gz"
MONO_DOWNLOAD="http://s3.amazonaws.com/mono3-buildpack/mono-fsharp-nuget3.0.tar.bz2"
PAKET_BINARY="https://github.com/fsprojects/Paket/releases/download/0.27.2/paket.exe"
NUGET_BINARY="http://nuget.org/nuget.exe"

BUILD_DIR=$1
CACHE_DIR=$2

function conditional_download() {
  DOWNLOAD_URL="$1"
  DESTINATION="$2"

  if [ ! -d ${DESTINATION} ]; then
    rm -rf ${DESTINATION}
    mkdir -p ${DESTINATION}
    echo "-----> Downloading ${DOWNLOAD_URL}"
    curl ${DOWNLOAD_URL} -s | tar xj -C ${DESTINATION}
  fi
}

LP_DIR=`cd $(dirname $0); cd ..; pwd`
cd ${BUILD_DIR}
mkdir -p ${CACHE_DIR}

MONO_CACHE_LOCATION=${CACHE_DIR}/$STACK/mono-${MONO_VERSION}
conditional_download ${MONO_DOWNLOAD} ${MONO_CACHE_LOCATION}


# Copy mono from cache to where we're building the slug
cp -r "${MONO_CACHE_LOCATION}/mono3" .
# Mono expects to be running out of /app
ln -s "$BUILD_DIR/mono3" /app


NUGET_EXECUTABLE_PATH=${CACHE_DIR}/nuget.exe
PAKET_EXECUTABLE_PATH=${CACHE_DIR}/paket.exe

if [ ! -f ${PAKET_EXECUTABLE_PATH} ]; then
  curl -LSso PAKET_EXECTABLE_PATH $PAKET_BINARY
fi

if [ ! -f ${NUGET_EXECUTABLE_PATH} ]; then
  curl -LSso ${NUGET_EXECUTABLE_PATH} $NUGET_BINARY
fi


export PATH="/app/mono/bin:${PATH}"
export LD_LIBRARY_PATH="/app/mono/lib:${LD_LIBRARY_PATH}"

echo "-----> Importing trusted root certificates"
mozroots --sync --import
cd $1

echo "-----> mozroots"
cat `which mozroots`

echo "-----> fsharpc"

echo "-----> fsharpc --version"
fsharpc --version

if [ -f paket.dependencies ]; then
  echo "-----> paket.dependencies found, installing packages with paket"
  mono $PAKET_EXECUTABLE_PATH install
fi

if [ -f packages.config -o -f */packages.config ]; then 
   echo "-----> packages.config found, installing dependencies with nuget" 
   find  -name packages.config | xargs mono $NUGET_EXECUTABLE_PATH restore -NonInteractive 
fi 

if [ -f app.fsx ]; then
  echo "-----> Compiling app.fsx"
  fsharpc app.fsx
fi

if [ -f *.sln -a ! -f dummy.sln]; then
   echo "-----> Compiling application" 
   xbuild 
fi
