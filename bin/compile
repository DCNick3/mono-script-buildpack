#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

BUILD_DIR=$1
CACHE_DIR=$2
LP_DIR=`cd $(dirname $0); cd ..; pwd`

# fail fast
set -e

MONO3_VM_BINARY="https://github.com/SuaveIO/mono-builder/releases/download/0.0.1/mono-3.12.1.tar.gz"
NUGET_BINARY="https://nuget.org/nuget.exe"
PAKET_BINARY="https://github.com/fsprojects/Paket/releases/download/0.35.0/paket.exe"

MOZROOT="${BUILD_DIR}/vendor/mono/lib/mono/4.5/mozroots.exe"
XBUILD="${BUILD_DIR}/vendor/mono/lib/mono/4.5/xbuild.exe"

echo "-----> Downloading mono to ${CACHE_DIR}/$STACK/vendor"
if [ ! -d ${CACHE_DIR}/$STACK/vendor/mono ]; then
    mkdir -p ${CACHE_DIR}/$STACK/vendor
    curl -L $MONO3_VM_BINARY -s | tar zxf - -C ${CACHE_DIR}/$STACK/vendor
    curl $NUGET_BINARY -L -o "${CACHE_DIR}/$STACK/vendor/mono/bin/nuget.exe" 
    curl $PAKET_BINARY -L -o "${CACHE_DIR}/$STACK/vendor/mono/bin/paket.exe" 
fi

mkdir -p ${BUILD_DIR}/vendor

echo "-----> Copying ${CACHE_DIR}/$STACK/vendor/mono to ${BUILD_DIR}/vendor"
cp -pr "${CACHE_DIR}/$STACK/vendor/mono" "${BUILD_DIR}/vendor/"

rm -fr /app/vendor/mono

echo "-----> Linking ${BUILD_DIR}/vendor/mono --> /app"
ln -s "${BUILD_DIR}/vendor/mono" /app/vendor

cp -p /app/vendor/mono/bin/fsharpc /app/vendor/mono/bin/fsharpc-heroku
cp -p /app/vendor/mono/bin/fsharpi /app/vendor/mono/bin/fsharpi-heroku

echo "-----> Setting envvars"
export PATH="/app/vendor/mono/bin:$PATH"
export LD_LIBRARY_PATH="/app/vendor/mono/lib"
echo "-----> Importing trusted root certificates"
mono $MOZROOT --sync --import
cd ${BUILD_DIR}

if [ -f paket.dependencies ]; then
  echo "-----> paket.dependencies found, installing packages with paket"
  mono vendor/mono/bin/paket.exe install
fi

if [ -f packages.config -o -f */packages.config ]; then 
   echo "-----> packages.config found, installing dependencies with nuget" 
   find  -name packages.config | xargs mono $NUGET install -o packages 
fi 

if [ -f app.fsx ]; then
  echo "-----> Compiling app.fsx"
  fsharpc -r:vendor/mono/lib/mono/4.5/FSharp.Core.dll -r:vendor/mono/lib/mono/4.0/mscorlib.dll app.fsx
elif [ -f *.sln ]; then
   echo "-----> Compiling application" 
   mono $XBUILD 
fi

mkdir -p ${BUILD_DIR}/.profile.d 
cp -n ${LP_DIR}/.profile.d/* ${BUILD_DIR}/.profile.d/ 


